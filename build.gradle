buildscript {
    repositories {
        mavenCentral()
        maven { url "https://files.minecraftforge.net/maven"                    }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/"  }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
            changing = true
        }
    }
}

apply plugin: 'forge'
apply plugin: 'java'
apply plugin: "maven-publish"

version = "Day-1-Fix3"
group= "club.someoneice.www"
archivesBaseName = "WheatfieldWithWolf-1.7.10"

ext {
    PineapplePsychicVersion = "1.5"
    PineappleTagsVersion = "1.+"

    NEIVersion = "2.5.17"
    CCVersion = "1.2.1"
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "minecraft"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://api.modrinth.com/maven"   }
    maven {
        url "http://maven.snowlyicewolf.club/"
        allowInsecureProtocol true
    }
}

dependencies {
    implementation "club.someoneice.pineapplepsychic:pineapple-psychic:${PineapplePsychicVersion}"
    implementation "club.someoneice.togocup.pineapple_tag:pineapple-tag:${PineappleTagsVersion}"

    implementation "maven.modrinth:notenoughitems-unofficial:${NEIVersion}-GTNH"
    implementation "maven.modrinth:codechickencore-unofficial:${CCVersion}"
    implementation "maven.modrinth:codechickenlib-unofficial:${CCVersion}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    filesMatching("mcmod.info") {
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }
}

sourceCompatibility = targetCompatibility = "1.8"

tasks.withType(Jar) {
    compileJava.options.encoding = 'UTF-8'
    compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Xlint:all"
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Xlint:all"
        }
    }
}

publishing {
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}